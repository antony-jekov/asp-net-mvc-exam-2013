@model MVCExam.Web.ViewModels.TicketCreateRequestViewModel

@{
    ViewBag.Title = "Add New Ticket";
}

<h2>@ViewBag.Title</h2>


@using (Html.BeginForm("Create", "Tickets", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <div class="control-group">
        @Html.LabelFor(model => model.CategoryId, new { @class = "control-label" })
        <div class="controls">
            @(Html.Kendo()
                    .DropDownList()
                    .Name("categoryid")
                    .DataTextField("CategoryName")
                    .DataValueField("CategoryId")
                    .DataSource(data =>
                    {
                        data.Read(read => read.Action("GetCategoriesDropDown", "Tickets"));
                        data.ServerFiltering(true);
                    }))
            @Html.ValidationMessageFor(model => model.CategoryId, null, new { @class = "help-inline" })
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.Title, new { @class = "control-label" })
        <div class="controls">
            @Html.EditorFor(model => model.Title)
            @Html.ValidationMessageFor(model => model.Title, null, new { @class = "help-inline" })
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.PriorityId, new { @class = "control-label" })
        <div class="controls">
            @(Html.Kendo()
                    .DropDownList()
                    .Name("priorityid")
            .DataTextField("PriorityType")
            .DataValueField("PriorityId")
            .OptionLabel("Select priority")
                    .DataSource(data =>
                    {
                        data.Read(read => read.Action("GetPrioritiesDropDown", "Tickets"));
                        data.ServerFiltering(true);
                    }))
            @Html.ValidationMessageFor(model => model.PriorityId, null, new { @class = "help-inline" })
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.ScreenshotUrl, new { @class = "control-label" })
        <div class="controls">
            @Html.EditorFor(model => model.ScreenshotUrl)
            @Html.ValidationMessageFor(model => model.ScreenshotUrl, null, new { @class = "help-inline" })
        </div>
    </div>

    <div class="control-group">
        @Html.LabelFor(model => model.Description, new { @class = "control-label" })
        <div class="controls">
            @Html.EditorFor(model => model.Description)
            @Html.ValidationMessageFor(model => model.Description, null, new { @class = "help-inline" })
        </div>
    </div>

    <div class="form-actions no-color">
        <input type="submit" value="Create" class="btn" />
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

